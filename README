PROJECT: build and train MNIST digit classification models
 - split into two parts, with sub components:
      - numpy implementation (Part1-skeleton.py): a trainable NN implemented strictly using the numpy library.  
      - numpy gradient checker (Part1-check-gradient.py): verifies the grad computation is correct for the numpy implementation.
      - PyTorch implementation (Part2-train-skeleton.py): a trainable NN implemented using pytorch.
      - PyTorch checker (Part2-eval-skeleton.py): loads a checkpoint and evaluates the PyTorch NN.
 - Python and the dependencies should be installed via conda, environment.yml provided

Conda installation:
 - install conda: https://docs.conda.io/projects/conda/en/latest/user-guide/install/index.html
 - we recommend you install miniconda
 - run to create the conda environment: conda env create --file environment.yml
 - activate the conda environment with: conda activate eecs6322-a1

Running the code from the CLI:
 - just run: python MYPYTHONSCRIPT.py
